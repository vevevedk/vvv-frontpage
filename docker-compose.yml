version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: vvv_database
      POSTGRES_USER: vvv_user
      POSTGRES_PASSWORD: Yo6g/LhuoAvQHd24QwhhmiQ5q7TGPc1HfA7Y7RB3gUE=
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - vvv_network

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - vvv_network

  backend:
    image: vvv-backend:latest
    command: gunicorn api.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 300 --keep-alive 2
    env_file:
      - ./env/backend.env
    environment:
      - DJANGO_SETTINGS_MODULE=api.settings.prod
    depends_on:
      - postgres
      - redis
    ports:
      - "8001:8000"  # Backend on port 8001 for system nginx
    networks:
      - vvv_network

  worker:
    image: vvv-backend:latest
    command: celery -A api worker -l info
    env_file:
      - ./env/backend.env
    depends_on:
      - backend
      - redis
    networks:
      - vvv_network

  beat:
    image: vvv-backend:latest
    command: celery -A api beat -l info
    env_file:
      - ./env/backend.env
    depends_on:
      - backend
      - redis
    networks:
      - vvv_network

  frontend:
    image: vvv-frontend:latest
    env_file:
      - ./env/frontend.env
    environment:
      - DJANGO_API_URL=http://backend:8000/api
    ports:
      - "3000:3000"  # Expose frontend on port 3000 for system nginx
    networks:
      - vvv_network

  # Removed nginx container - system nginx handles SSL termination and reverse proxy

volumes:
  postgres_data:
  redis_data:

networks:
  vvv_network:
    driver: bridge
